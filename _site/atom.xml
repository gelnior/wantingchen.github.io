<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Wan-Ting</title>
 <link href="http://wantingchen.github.io/atom.xml" rel="self"/>
 <link href="http://wantingchen.github.io/"/>
 <updated>2016-04-21T22:36:52+02:00</updated>
 <id>http://wantingchen.github.io</id>
 <author>
   <name>Wan-Ting CHEN</name>
   <email>wanting@gmail.com</email>
 </author>

 
 <entry>
   <title>La fonction de Hachage (Hash) et Chiffrement (Encryption)</title>
   <link href="http://wantingchen.github.io/information/2016/04/21/Hash_Encrypt.html"/>
   <updated>2016-04-21T00:00:00+02:00</updated>
   <id>http://wantingchen.github.io/information/2016/04/21/Hash_Encrypt</id>
   <content type="html">&lt;h3 id=&quot;la-diffrence-entre-fonction-de-hachage-hash-et-chiffrement-encryption&quot;&gt;La différence entre fonction de Hachage (Hash) et Chiffrement (Encryption)&lt;/h3&gt;
&lt;p&gt;D’abord, il faut qu’on explique les deux brièvement.&lt;/p&gt;

&lt;p&gt;En général, une fonction de Hachage convertit “irrévesiblement” les données avec les tailles arbitraires aux données avec les tailles fixés.
Et on peut chiffrer les données à une autre forme et aussi retrouver les données originaux avec la clé de chiffrement correspondante.&lt;/p&gt;

&lt;p&gt;Concrètement,  il y a deux différences majeures:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Normalement, les taille de données convertie par une certaine fonction de Hachage ne change jamais.&lt;/strong&gt; 
Mais celles obtenues par chiffrement est souvent (pas toujours) proportionnelles aux tailles de données originaux.
Par exemple, si on utilise la fontion de Hachage encastré de python pour convertir les deux chaîne de caractères, “Microsoft” et “Google”:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;
  &lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;467753631682903773&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Google&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;201064995106876445&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/figure&gt;

&lt;p&gt;Les tailles de résultats sont la même. Mais, si on utilise l’implémentation de RSA:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;
  &lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;37&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pubkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;privkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rsa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newkeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;512&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;38&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rsa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pubkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;38&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x97\xf3\xae\xf5\xea\xb5\xb9&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;;0&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x8b&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1xCW&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xd0\xca\xd8\x07&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xf3&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$T&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x00&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x9c\n\x88\x96&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Zo&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x87&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x9d\x90\xe3&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xb7\xd2\xbd&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;j&amp;gt;&amp;lt;*&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xad&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x15\xac&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x8e\x95\xfe&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;|,&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xdf\xfe\xd2&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;tA&amp;lt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xa8\x8f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xee\x1e&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;39&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rsa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Google&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pubkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;39&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x1b\xe4&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x82&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;XU&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xcc\xbd\x08&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x1f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Q&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xfb&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xd8\x19&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xf1\x18\xd1&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r{&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xe1&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x87\xbe\xc0\xfe&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xe9\x10\x91&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x86\xc6&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xd7&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;J!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x8e\xb5&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;n2&#39;v&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xeb&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;|?&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x86&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xa0&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;J~&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x14\xca\x8e&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xd5&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xa3&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Y.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x83&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;S&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Un algorithme de Hachage est irrévisible. Néanmoins, celui de Chiffrement est révisible.&lt;/strong&gt;
C’est-à-dire qu’il n’existe pas de façon de retrouver les résultats générés par une fonction de hachage á les chaînes de caractères originaux,
pourtant on peut déchiffrer les codes avec la clé de chiffrement correspondante.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;
  &lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rsa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x1b\xe4&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x82&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;XU&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xcc\xbd\x08&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x1f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Q&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xfb&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xd8\x19&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xf1\x18\xd1&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r{&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xe1&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x87\xbe\xc0\xfe&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xe9\x10\x91&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x86\xc6&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xd7&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;J!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x8e\xb5&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;n2&#39;v&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xeb&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;|?&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x86&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xa0&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;J~&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x14\xca\x8e&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xd5&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xa3&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Y.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x83&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;S&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;privkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;Google&#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rsa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x97\xf3\xae\xf5\xea\xb5\xb9&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;;0&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x8b&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1xCW&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xd0\xca\xd8\x07&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xf3&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$T&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x00&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x9c\n\x88\x96&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Zo&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x87&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x9d\x90\xe3&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xb7\xd2\xbd&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;j&amp;gt;&amp;lt;*&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xad&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x15\xac&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x8e\x95\xfe&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;|,&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xdf\xfe\xd2&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;tA&amp;lt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xa8\x8f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\xee\x1e&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;privkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;Microsoft&#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/figure&gt;

&lt;p&gt;Pourquoi? 
Parce que une certaine chaîne de caractères peut avoir uniquement un mapping à une certaine 
chaîne de caractères avec certains algorithme et clé
(ça signifie : seul à seul).
Mais c’est possible de trouver deux ou plus chaînes de caractères qui peuvent convertir a même résultat avec une certaine fountion de Hachage
(Dans cette situation, on l’appelle ces chaînes de caractères one la “collision”).&lt;/p&gt;

&lt;h3 id=&quot;diffrent-conception&quot;&gt;Différent conception&lt;/h3&gt;
&lt;p&gt;Pour une bonne fonction de Hachage, il faut avoir les conditions:
- &lt;strong&gt;C’est difficile de trouver quelconque collision.&lt;/strong&gt; 
Si on utilise une fonction de Hachage pour convertir un certain mot-de-passe, 
on peut simplement essayer une énorme quantité de chaînes de caractères afin de obtenir le même résultat,
et alors on peut passer!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;C’est sensitive aux petites différences.&lt;/strong&gt;
Si un caractère d’une chaîne avec 10000-bytes longueur est modifié, le résultat devra changer complétement.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Et une fonction de chiffrement fiable doit avoir la propriété de “fonction à sens unique avec trappe”:
- &lt;strong&gt;c’est facile de chiffrer facilement et aussi d’être inversé avec clé.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Si on’a pas de clé, c’est extrêmement de trouver le façon de déchiffrer même si on sait l’algorithme.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;application&quot;&gt;Application&lt;/h3&gt;

&lt;h3 id=&quot;rfrence&quot;&gt;Référence:&lt;/h3&gt;
&lt;p&gt;[^1] &lt;a href=&quot;http://www.cnblogs.com/leoo2sk/archive/2010/10/01/hash-and-encrypt.html&quot;&gt;哈希(Hash)与加密(Encrypt)的基本原理、区别及工程应用 (en chinois)&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Construire un quadrirotor avec Raspberry Pi (1)</title>
   <link href="http://wantingchen.github.io/syst%C3%A8me%20embarqu%C3%A9/2016/04/12/Drone_1.html"/>
   <updated>2016-04-12T00:00:00+02:00</updated>
   <id>http://wantingchen.github.io/syst%C3%A8me%20embarqu%C3%A9/2016/04/12/Drone_1</id>
   <content type="html">&lt;p&gt;Bien qu’il y a déjà plusieurs réalisations des drones propulsés par raspberry pi &lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;,
je voulais encore défier une fois moi-même, afin de présenter ce que j’apprends.&lt;/p&gt;

&lt;p&gt;Différent avec les autres, le drone que je veux construire a les spécialités:
- Tous les capteurs/modules sont connectés directement avec Raspberry pi, aucun microprocessor est utilisé.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Utiliser Arduino pour le controller du drone.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Utiliser bcm2835 bibliothèque &lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; au lieu des autres bibliothèque afin de éviter d’utiliser pas les drivers d’i2c.
Ça me donne une chance d’essayer Xenomai&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;La communication entre le controller et le drone est realisé par RF modules. 
Et le drone peut arrêter automatiquement quand la communication est vraiment perdue.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Si nécessaire, Preempt RT kernel ou Xenomai peut être adapté afin de régulier la fréquence.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Selon les spécification, on doit préparer:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;10 DOF IMU：GY80(I2C，400kHz，le temps de rafraîchissement peut atteindre 1600Hz). 
Mais j’ai trouvé que le baromètre (Bosch BMP085) n’est pas assez précis (0.03hPa / 0.25m résolution).
MS5611 est ajouté afin d’augmenter la précision.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;nRF24L01*2：modules RF(250Kbps-2Mbps，la bande passante varie avec la distance, SPI), un pour RPi, un pour Arduino.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ADC：MCP3008, 10bit(afin de mesurer la tension de la batterie)，SPI.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;PWM：PCA9685(On peut acheter à Adafruit &lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;)，I2C，12bit，la fréquence maximum est 1526Hz.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.amazon.fr/gp/product/B00T6ANWUU/ref=oh_aui_detailpage_o02_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;ZOP Power 11.1V 5500mAh 3S1P 35C Lipo Battery For RC Model&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.amazon.fr/gp/product/B00RWH7CA0/ref=oh_aui_detailpage_o03_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;HOSdog 30A 4 en 1 Brushless Speed Contrôleur ESC pour RC Quadcopter Multicopter (Noir)&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.amazon.fr/gp/product/B00CCXN4HO/ref=oh_aui_detailpage_o07_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;JMT F450 Air multi-Rotor Frame FlameWheel KIT 450F comme DJI pour KK MWC MK 4 axe RC Quadcopter Multicopter UFO Heli&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.amazon.fr/gp/product/B00L8H95AU/ref=oh_aui_detailpage_o08_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;Andoer 4 A2212/13T 1000KV Brushless Motor + 2 paires 1045 10 * 4.5 Hélices pour DJI F450 F550 MWC Multicopter (2212 1000KV Brushless Motor, 1045 10 * 4.5 Hélices, DJI F450 F550 partie)&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ensuite, on y va!&lt;/p&gt;

&lt;h4 id=&quot;rfrence&quot;&gt;Référence:&lt;/h4&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://www.botched.co.uk/&quot;&gt;Botched&lt;/a&gt;, 
  &lt;a href=&quot;http://www.instructables.com/id/The-Drone-Pi/&quot;&gt;The Drone Pi&lt;/a&gt;,
  &lt;a href=&quot;https://github.com/idavidstory/goPiCopter&quot;&gt;goPiCopter&lt;/a&gt;, 
  &lt;a href=&quot;http://blog.pistuffing.co.uk/&quot;&gt;PiStuffing&lt;/a&gt;,
  &lt;a href=&quot;https://github.com/vjaunet/QUADCOPTER_V2&quot;&gt;QUADCOPTER&lt;/a&gt;, 
  &lt;a href=&quot;https://github.com/gregd72002/AvrMiniCopter-wiki/wiki&quot;&gt;AvrMiniCopter&lt;/a&gt;,
  &lt;a href=&quot;https://www.raspberrypi.org/forums/viewtopic.php?f=37&amp;amp;t=35746&quot;&gt;PiCopter&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://www.airspayce.com/mikem/bcm2835/&quot;&gt;C library for Broadcom BCM 2835 as used in Raspberry Pi&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://xenomai.org/&quot;&gt;Xenomai&lt;/a&gt; &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.adafruit.com/product/815&quot;&gt;Adafruit 16-Channel 12-bit PWM/Servo Driver-I2C interface-PCA9685&lt;/a&gt; &lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
 </entry>
 

</feed>
